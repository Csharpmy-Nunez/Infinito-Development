/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manageit;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samy
 */
public class Add_Product extends javax.swing.JFrame {
    
    Product product;
    private static int id = 1;
    public static ArrayList<Product> globalProductList = new ArrayList<>();
    public static ArrayList<Part> localPartList = new ArrayList<>();
    public static Inventory inventory = new Inventory();

    /**
     * Creates new form Add_Product
     */
    public Add_Product() {
        initComponents();
        manageit.Main_Screen mainScreen = new Main_Screen();
        mainScreen.populateTable(jTable3);
        displayPartsByProduct(localPartList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //==============================METHODS================================================================
    
    public Part partForProduct(int id){
        Part part = null;
        
        for(int index = 0; index < Add_Part.globalPartList.size(); index++){
            if(Add_Part.globalPartList.get(index).getPartID() == id){                
                part = Add_Part.globalPartList.get(index);
                return part;
            }
        }
        
        return part;
    }
    
    public void displayPartsByProduct(ArrayList<Part> list){
               DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
               Object[] rowData = new Object[4];
               
                for(int index = 0; index < list.size(); index++){
                   //model.setRowCount(0);
                   rowData[0] = list.get(index).getPartID();
                   rowData[1] = list.get(index).getName();
                   rowData[2] = list.get(index).getInStock();
                   rowData[3] = list.get(index).getPrice();
                   model.addRow(rowData);
               }
               jTable2.setModel(model);
               
    }
    
    
             public void searchPart(JTable table, String partName){
               DefaultTableModel model = (DefaultTableModel) table.getModel();
               Object[] rowData = new Object[4];
               ArrayList<Part> list = Add_Part.globalPartList;
               
                for(int index = 0; index < Add_Part.globalPartList.size(); index++){
                    String name = list.get(index).getName();
                if( name.equals(partName)){
                   model.setRowCount(0);
                   rowData[0] = list.get(index).getPartID();
                   rowData[1] = list.get(index).getName();
                   rowData[2] = list.get(index).getInStock();
                   rowData[3] = list.get(index).getPrice();
                   model.addRow(rowData);
                }
            }
            
            table.setModel(model);
               
               
           }//End of searchPart
             
     public Product getProductByID(int productID){
        Product product = null;
        for(int index = 0; index < inventory.accessProductList().size(); index++){
            
            if(inventory.accessProductList().get(index).getProductID() == productID){
                product = inventory.accessProductList().get(index);
                return product;
            }
        }
        return product;
    }
     
     public ArrayList<Part> returnPartList(){
         ArrayList<Part> list = localPartList;
         return list;
     }
     
     
    public void deleteFromProductPartList(int id, int partID){
               Product product = getProductByID(id);
               if(product._partList != null && id > 0){
                   for(int index = 0; index < product._partList.size(); index++){
                       if(product._partList.get(index).getPartID() == partID){
                           product._partList.remove(index);
                       }
                   }
               }
           }//End of deleteFromList
    
    public void removePartFromProductPartList(ArrayList<Part> list, int partID){
        for(int index = 0; index < list.size(); index++){
            if(list.get(index).getPartID() == partID){
                list.remove(index);
            }
        }
    }
    
    //=====================================================================================================
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtProductID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxtProductName = new javax.swing.JTextField();
        jtxtProductInv = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtxtProductPrice = new javax.swing.JTextField();
        jtxtMin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtxtMax = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jbtnAddProduct = new javax.swing.JButton();
        jbtnSaveProduct = new javax.swing.JButton();
        jbtnDeleteProduct = new javax.swing.JButton();
        jbtnSaveCancel = new javax.swing.JButton();
        jbtnSearch = new javax.swing.JButton();
        jtxtSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(212, 218, 225));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(77, 96, 136));
        jLabel1.setText("Add Product");

        jtxtProductID.setEditable(false);
        jtxtProductID.setText("   Auto Gen - Disabled");
        jtxtProductID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel2.setText("ID");

        jLabel3.setText("Name");

        jtxtProductName.setText("Product Name");
        jtxtProductName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jtxtProductInv.setText("Inv");
        jtxtProductInv.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel4.setText("Inv");

        jLabel5.setText("Price/Cost");

        jtxtProductPrice.setText("Price/Cost");
        jtxtProductPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jtxtMin.setText("  Min");

        jLabel7.setText("Min");

        jtxtMax.setText("Max");

        jLabel6.setText("Max");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part ID", "Part  Name", "Inventory Level", "Price per Unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part ID", "Part Name", "Inventory Level", "Price per Unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(jTable3);
        jTable3.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jbtnAddProduct.setText("Add");
        jbtnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddProductActionPerformed(evt);
            }
        });

        jbtnSaveProduct.setText("Save");
        jbtnSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveProductActionPerformed(evt);
            }
        });

        jbtnDeleteProduct.setText("Delete");
        jbtnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteProductActionPerformed(evt);
            }
        });

        jbtnSaveCancel.setText("Cancel");
        jbtnSaveCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveCancelActionPerformed(evt);
            }
        });

        jbtnSearch.setText("Search");
        jbtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(52, 52, 52)
                                        .addComponent(jtxtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(63, 63, 63)
                                            .addComponent(jtxtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addGap(26, 26, 26))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jtxtProductInv, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jtxtProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jLabel6)
                                .addGap(26, 26, 26)
                                .addComponent(jtxtMax, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxtMin, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnAddProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtnSearch)
                                .addGap(26, 26, 26)
                                .addComponent(jtxtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbtnSaveCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtnSaveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbtnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtxtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtnSearch)
                            .addComponent(jtxtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtxtProductInv, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jtxtMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jtxtMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSaveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnSaveCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jbtnSaveCancelActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog (null, "Would You Like to Cancel This Transaction?","Warning",JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){           
            this.setVisible(false); 
            new Main_Screen().setVisible(true);
          }
    }                                              

    private void jbtnSaveProductActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
             

        try{
           
                if(!jtxtProductName.getText().trim().isEmpty() & !jtxtProductInv.getText().trim().isEmpty() & !jtxtProductPrice.getText().trim().isEmpty()){
                    
                    Part part = null;      
                    String productName = jtxtProductName.getText().trim();
                    int inStock = Integer.parseInt(jtxtProductInv.getText().trim());
                    double price = Double.parseDouble(jtxtProductPrice.getText().trim());
                    int min  = Integer.parseInt(jtxtMin.getText().trim());
                    int max = Integer.parseInt(jtxtMax.getText().trim());
                    
                    
                      int selectedPartID = 0;
                      int column = jTable3.getSelectedColumn();
                      int row = jTable3.getSelectedRow();
                     
                      if(column == 0){
                         Object object = jTable3.getValueAt(row, column);
                         selectedPartID = Integer.parseInt(object.toString());
                         
                         part = partForProduct(selectedPartID);
                         
                         //localPartList.add(part);
                         //product._partList = returnPartList();
                        
                         
                         if(Double.parseDouble(jtxtProductPrice.getText()) < part.getPrice()){
                             throw new PriceLowerThanPartCostExeption("Part price cannot be greater than Product price");
                         }
                         if(min <= max){
                             
                             if(max >= min){
                                 
                                  int partID = id++;
                          product = new Product(localPartList, productName, partID, price, inStock, min, max);
                          
                          //Add product to the inventory
                         inventory.addProduct(product);
                         if(product._partList.isEmpty()){
                          throw new NoPartAssociatedException("A Product must have an associated part");
                         }
                         //Add product to the list
                         //globalProductList.add(product);       
                         //Display parts
                         //displayPartsByProduct(product._partList);
                         //Send data to main screen
                          this.setVisible(false);
                          new Main_Screen().setVisible(true);
                                 
                             }else{
                                 throw new MaxBelowMinException("Maximum field cannot have a value below the minimum field value");
                             }                                  
                             
                         }else{
                             throw new MinAboveMaxException("Minimum field cannot have a value above the maximum field value");
                         }
                          
                         
                     }else{
                        throw new NoPartAssociatedException("A Product must have an associated part");
                   }
                     
            
                        }else{
                         throw new IncompleteProductInformationException("Ensure that the product have a name, price, category, and inventory level");
                      }
        
        }catch(NumberFormatException | IncompleteProductInformationException | NoPartAssociatedException | PriceLowerThanPartCostExeption | MinAboveMaxException | MaxBelowMinException e){
            JOptionPane.showMessageDialog(null, e.getMessage(), "Invalid Transaction. Constraints Apply", JOptionPane.WARNING_MESSAGE);
            e.printStackTrace();
            //JOptionPane.showMessageDialog(null, "Enter valid numeric values");
        }
        
        
        
        
        
    }                                               

    private void jbtnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
         Part part = null;
         int selectedPartID = 0;
         int column = jTable2.getSelectedColumn();
         int row = jTable2.getSelectedRow();
        
         
         if(column == 0){
                Object object = jTable2.getValueAt(row, column);
                selectedPartID = Integer.parseInt(object.toString());
                
                int dialogResult = JOptionPane.showConfirmDialog (null, "Would You Like to Delete This Part?","Warning",JOptionPane.YES_NO_OPTION);
                          if(dialogResult == JOptionPane.YES_OPTION){
                             
                                      //part = partForProduct(selectedPartID);
                               //localPartList.add(part);
                              //deleteFromProductPartList(selectedPartID, selectedPartID);
                              removePartFromProductPartList(localPartList, selectedPartID);
                              displayPartsByProduct(localPartList);
                             //Product product = getProductByID(productID);
                
                             //product._partList = localPartList;
                              //this.setVisible(false);
                
                            JOptionPane.showMessageDialog(null, "Part ID " + selectedPartID + " associated with the product has been deleted");
                              
                          }
        
         }else{
                 JOptionPane.showMessageDialog(null, "Select partID from the Part ID column");
                  }
        
    }                                                 

    private void jbtnAddProductActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
         Part part = null;
         int selectedPartID = 0;
         int column = jTable3.getSelectedColumn();
         int row = jTable3.getSelectedRow();
        // int productID = Integer.parseInt(jtxtProductID.getText());
        if(column == 0){
                Object object = jTable3.getValueAt(row, column);
                selectedPartID = Integer.parseInt(object.toString());
                part = partForProduct(selectedPartID);
                localPartList.add(part);
                
                displayPartsByProduct(localPartList);
                //Product product = getProductByID(productID);
                
                //product._partList = localPartList;
                
                JOptionPane.showMessageDialog(null, "Part ID " + part.getPartID() + " associated with the product");
            
         }else{
                 JOptionPane.showMessageDialog(null, "Select partID from the Part ID column");
                  }
        
    }                                              

    private void jbtnSearchActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        String partName = jtxtSearch.getText().trim();
        
        if(!jtxtSearch.getText().trim().isEmpty()){
            
            searchPart(jTable3, partName);
            
        }else{
            JOptionPane.showMessageDialog(null, "Please enter a part name");
        }
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JButton jbtnAddProduct;
    private javax.swing.JButton jbtnDeleteProduct;
    private javax.swing.JButton jbtnSaveCancel;
    private javax.swing.JButton jbtnSaveProduct;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JTextField jtxtMax;
    private javax.swing.JTextField jtxtMin;
    private javax.swing.JTextField jtxtProductID;
    private javax.swing.JTextField jtxtProductInv;
    private javax.swing.JTextField jtxtProductName;
    private javax.swing.JTextField jtxtProductPrice;
    private javax.swing.JTextField jtxtSearch;
    // End of variables declaration                   
}
